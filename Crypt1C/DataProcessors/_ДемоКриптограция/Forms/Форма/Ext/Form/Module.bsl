#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДлинаКлючаPBKDF2 = 64;
	КоличествоИтераций = 600000;
	АдресКлючаAES = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	АдресВектораИнициализацииAES = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	АдресЗашифрованногоТекста = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	АдресЗашифрованногоТекстаПоПаролю = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	АдресСгенерированнойСоли = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	АдресЗашифрованногоТекстаПоПаролюСГенерациейСоли = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВычислитьPBKDF2(Команда)
	ВычислитьPBKDF2НаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьКлючAES(Команда)
	СгенерироватьКлючAESНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СгенирироватьВекторИнициализацииAES(Команда)
	СгенирироватьВекторИнициализацииAESНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьШифрование(Команда)
	ВыполнитьШифрованиеНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРасшифровку(Команда)
	ВыполнитьРасшифровкуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьШифрованиеПоПаролю(Команда)
	ВыполнитьШифрованиеПоПаролюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРасшифровкуПоПаролю(Команда)
	ВыполнитьРасшифровкуПоПаролюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьСоль(Команда)
	СгенерироватьСольНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьШифрованиеПоПаролюСГенерированнойСолью(Команда)
	ВыполнитьШифрованиеПоПаролюСГенерированнойСольюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРасшифровкуПоПаролюСГенерированнойСолью(Команда)
	ВыполнитьРасшифровкуПоПаролюСГенерированнойСольюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьСообщение(Команда)
	ПодписатьСообщениеНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВычислитьPBKDF2НаСервере()
	Результат = Криптография.PBKDF2SHA512(Пароль, Соль, ДлинаКлючаPBKDF2, КоличествоИтераций);
	РезультатPBKDF2 = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
КонецПроцедуры

&НаСервере
Процедура СгенерироватьКлючAESНаСервере()
	Результат = Криптография.НовыйКлючAES();
	ПоместитьВоВременноеХранилище(Результат, АдресКлючаAES);
	ПредставлениеКлючаAES = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
КонецПроцедуры

&НаСервере
Процедура СгенирироватьВекторИнициализацииAESНаСервере()
	Результат = Криптография.НовыйВекторИнициализацииAES();
	ПоместитьВоВременноеХранилище(Результат, АдресВектораИнициализацииAES);
	ПредставлениеВектораИнициализацииAES = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьШифрованиеНаСервере()
	ДанныеДляШифрования = ПолучитьДвоичныеДанныеИзСтроки(ТекстДляШифрования);
	Результат = Криптография.ЗашифроватьAES(
		ДанныеДляШифрования,
		ПолучитьИзВременногоХранилища(АдресКлючаAES),
		ПолучитьИзВременногоХранилища(АдресВектораИнициализацииAES)
	);
	ПоместитьВоВременноеХранилище(Результат, АдресЗашифрованногоТекста);
	ПредставлениеЗашифрованногоТекста = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасшифровкуНаСервере()
	РасшифрованныеДанные = Криптография.РасшифроватьAES(
		ПолучитьИзВременногоХранилища(АдресЗашифрованногоТекста),
		ПолучитьИзВременногоХранилища(АдресКлючаAES),
		ПолучитьИзВременногоХранилища(АдресВектораИнициализацииAES)
	);
	РасшифрованныйТекст = ПолучитьСтрокуИзДвоичныхДанных(РасшифрованныеДанные);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьШифрованиеПоПаролюНаСервере()
	ДанныеДляШифрования = ПолучитьДвоичныеДанныеИзСтроки(ТекстДляШифрованияПоПаролю);
	Результат = Криптография.ЗашифроватьAESПоПаролю(
		ДанныеДляШифрования,
		ПарольAES,
		СольAES,
		600000
	);
	ПоместитьВоВременноеХранилище(Результат, АдресЗашифрованногоТекстаПоПаролю);
	ПредставлениеЗашифрованногоТекстаПоПаролю = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасшифровкуПоПаролюНаСервере()
	РасшифрованныеДанные = Криптография.РасшифроватьAESПоПаролю(
		ПолучитьИзВременногоХранилища(АдресЗашифрованногоТекстаПоПаролю),
		ПарольAES,
		СольAES,
		600000
	);
	РасшифрованныйТекстПоПаролю = ПолучитьСтрокуИзДвоичныхДанных(РасшифрованныеДанные);
КонецПроцедуры

&НаСервере
Процедура СгенерироватьСольНаСервере()
	Результат = Криптография.СлучайныеДвоичныеДанные(8);
	ПоместитьВоВременноеХранилище(Результат, АдресСгенерированнойСоли);
	ПредставлениеСгенерированнойСоли = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьШифрованиеПоПаролюСГенерированнойСольюНаСервере()
	Если ЗначениеЗаполнено(ПредставлениеСгенерированнойСоли) Тогда
		ИспользуемаяСоль = ПолучитьИзВременногоХранилища(АдресСгенерированнойСоли);
		СгенерироватьСоль = Ложь;
	Иначе
		ИспользуемаяСоль = Неопределено;
		СгенерироватьСоль = Истина;
	КонецЕсли;
	
	ДанныеДляШифрования = ПолучитьДвоичныеДанныеИзСтроки(ТекстДляШифрованияПоПаролюСГенерациейСоли);
	Результат = Криптография.ЗашифроватьAESПоПаролю(
		ДанныеДляШифрования,
		ПарольAESСГенерациейСоли,
		ИспользуемаяСоль,
		600000
	);
	ПоместитьВоВременноеХранилище(Результат, АдресЗашифрованногоТекстаПоПаролюСГенерациейСоли);
	ПредставлениеЗашифрованногоТекстаПоПаролюСГенерациейСоли = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
	
	Если СгенерироватьСоль Тогда
		ПоместитьВоВременноеХранилище(ИспользуемаяСоль, АдресСгенерированнойСоли);
		ПредставлениеСгенерированнойСоли = ПолучитьHexСтрокуИзДвоичныхДанных(ИспользуемаяСоль);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасшифровкуПоПаролюСГенерированнойСольюНаСервере()
	РасшифрованныеДанные = Криптография.РасшифроватьAESПоПаролю(
		ПолучитьИзВременногоХранилища(АдресЗашифрованногоТекстаПоПаролюСГенерациейСоли),
		ПарольAESСГенерациейСоли,
		ПолучитьИзВременногоХранилища(АдресСгенерированнойСоли),
		600000
	);
	РасшифрованныйТекстПоПаролюСГенерациейСоли = ПолучитьСтрокуИзДвоичныхДанных(РасшифрованныеДанные);
КонецПроцедуры

&НаСервере
Процедура ПодписатьСообщениеНаСервере()
	Результат = Криптография.HMACSHA256(КлючДляПодписания, СообщениеДляПодписания);
	ПредставлениеHMACSHA256 = ПолучитьHexСтрокуИзДвоичныхДанных(Результат);
КонецПроцедуры

#КонецОбласти